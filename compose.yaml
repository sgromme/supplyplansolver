networks:
  app-tier:
    driver: bridge

services:
  kafka:
    image: 'bitnami/kafka:latest'
    hostname: kafka 
    container_name: kafka
    networks:
      - app-tier
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  kafka-init:
    image: 'bitnami/kafka:latest'
    hostname: kafka-init
    container_name: kafka-init
    depends_on:
      - kafka
    networks:
      - app-tier
    entrypoint: ["./kafka-populate.sh"]
    env_file:
       - ./env.kafka-populate
    volumes:
       - ./kafka-populate.txt:/kafka-populate.txt
       - ./kafka-populate.sh:/kafka-populate.sh
  myapp:
    image: 'producer:latest'
    hostname: myapp
    container_name: myapp
    environment:
      - buildtag=1
      - TEST=YES_I_CAN_GET_A_VARIABLE_FROM_COMPOSE_PRODUCER
    depends_on:
      kafka-init:
        condition: service_completed_successfully
    networks:
      - app-tier
  myapp2:
    image: 'consumer:latest'
    hostname: myapp2
    container_name: myapp2
    environment:
      - buildtag=1
      - TEST=YES_I_CAN_GET_A_VARIABLE_FROM_COMPOSE_CONSUMER
    depends_on:
      kafka-init:
        condition: service_completed_successfully
    networks:
      - app-tier
    
